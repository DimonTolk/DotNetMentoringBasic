/*
Deployment script for mentoring

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "mentoring"
:setvar DefaultFilePrefix "mentoring"
:setvar DefaultDataPath "C:\Users\Dmitry_Tolkachev\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"
:setvar DefaultLogPath "C:\Users\Dmitry_Tolkachev\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Creating Trigger [dbo].[Employee_insert]...';


GO
CREATE TRIGGER Employee_insert
ON [Employee]
AFTER INSERT
AS
BEGIN
	SET NOCOUNT ON
	declare @companyAddressId int;
	SELECT @companyAddressId = AddressId FROM INSERTED
	insert into Company (AddressId) values (@companyAddressId);

END
GO
PRINT N'Altering View [dbo].[EmployeeInfo]...';


GO
ALTER VIEW EmployeeInfo as SELECT TOP(1000)
	e.Id as EmployeeId,
	case when e.EmployeeName is not null then e.EmployeeName else CONCAT(p.FirstName, ' ', p.LastName) end as EmployeeFullName,
	CONCAT(a.ZipCode,'_', a.State, ', ',a.City, '-', a.Street) as EmployeeFullAddress,
	CONCAT(c.Name, ', ', e.Position) as EmployeeCompanyInfo
	FROM [Employee] e
	inner join [Person] p on e.PersonId=p.Id
	inner join [Address] a on e.AddressId=a.Id
	inner join [Company] c on e.CompanyName=c.Name 
	order by e.CompanyName, a.City ASC
GO
PRINT N'Creating Procedure [dbo].[InsertEmployeeInfo]...';


GO
CREATE PROCEDURE [dbo].[InsertEmployeeInfo]
	@EmployeeName nvarchar(50) = '',
	@FirstName nvarchar(50) = '',
	@LastName nvarchar(50) = '',
	@CompanyName nvarchar(20),
	@Position nvarchar(30),
	@Street nvarchar(50) = '',
	@City nvarchar(20) = '',
	@State nvarchar(50) = '',
	@ZipCode nvarchar(50) = ''
AS	
begin
	IF len(@CompanyName)>20 
		set @CompanyName = left(@CompanyName,20);

	insert into [Address] ([Street], [City], [State], [ZipCode]) values (@Street, @City, @State, @ZipCode);
	declare @addressId int;
	SELECT @addressId = Max(Id) from [Address];
	insert into [Company] ([Name], [AddressId]) values (@CompanyName, @addressId);
	
	declare @personId int;
	IF NULLIF(@LastName, '') IS NOT NULL OR NULLIF(@FirstName, '') IS NOT NULL OR NULLIF(@EmployeeName, '') IS NOT NULL 
	begin;
		insert into [Person] ([FirstName], [LastName]) values (@FirstName, @LastName);
		SELECT @personId = Id from [Person];
		insert into [Employee] ([AddressId], [PersonId], [CompanyName], [Position]) values (@addressId, @personId, @CompanyName, @Position);
	end;
	ELSE
		return 0;
end;
GO
insert into [Address] ([Street], [City], [State], [ZipCode]) values ('Partizansky avenue, 32', 'Minsk', 'Belarus','220000');
insert into [Address] ([Street], [City], [State], [ZipCode]) values ('Riddle Mansion', 'Little Hangleton', 'Great Britain','000000');
insert into [Address] ([Street], [City], [State], [ZipCode]) values ('1/1 Kuprevicha','Minsk','Belarus','220141');
insert into [Address] ([Street], [City], [State], [ZipCode]) values ('Hogwarts Castle','Scottish Highlands','Great Britain','220141');

insert into [Person] ([FirstName], [LastName]) values ('Dmitry','Tolkachev');
insert into [Person] ([FirstName], [LastName]) values ('Tom','Riddle');

insert into [Company] ([Name], [AddressId]) values ('EPAM', 3);
insert into [Company] ([Name], [AddressId]) values ('Hogwarts', 4);

insert into [Employee] ([AddressId], [PersonId], [CompanyName], [Position]) values (1, 1, 'EPAM', 'Junior Software Developer');
insert into [Employee] ([AddressId], [PersonId], [CompanyName], [Position], [EmployeeName]) values ('2','2','Hogwarts','Dark Lord', 'Lord Voldemort');
GO

GO
PRINT N'Update complete.';


GO
