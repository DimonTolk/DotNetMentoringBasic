/*
Deployment script for Database

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Database"
:setvar DefaultFilePrefix "Database"
:setvar DefaultDataPath "C:\Users\Dmitry_Tolkachev\AppData\Local\Microsoft\VisualStudio\SSDT\ADOLibrary"
:setvar DefaultLogPath "C:\Users\Dmitry_Tolkachev\AppData\Local\Microsoft\VisualStudio\SSDT\ADOLibrary"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                CURSOR_DEFAULT LOCAL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE,
                DISABLE_BROKER 
            WITH ROLLBACK IMMEDIATE;
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367)) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
PRINT N'Creating Table [dbo].[Order]...';


GO
CREATE TABLE [dbo].[Order] (
    [Id]          INT            NOT NULL,
    [Status]      NVARCHAR (250) NOT NULL,
    [CreatedDate] DATETIME       NOT NULL,
    [UpdatedDate] DATETIME       NOT NULL,
    [ProductId]   INT            NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Product]...';


GO
CREATE TABLE [dbo].[Product] (
    [Id]          INT            NOT NULL,
    [Name]        NVARCHAR (250) NOT NULL,
    [Description] NVARCHAR (250) NOT NULL,
    [Weight]      INT            NOT NULL,
    [Height]      INT            NOT NULL,
    [Width]       INT            NOT NULL,
    [Length]      INT            NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Foreign Key [dbo].[FK_Order_ToProduct]...';


GO
ALTER TABLE [dbo].[Order] WITH NOCHECK
    ADD CONSTRAINT [FK_Order_ToProduct] FOREIGN KEY ([ProductId]) REFERENCES [dbo].[Product] ([Id]);


GO
PRINT N'Creating Procedure [dbo].[spCreateOrder]...';


GO
CREATE PROCEDURE [dbo].[spCreateOrder]
	@Status nvarchar(max),
    @ProductId int
AS
BEGIN
	insert into [Order] ([Status], [CreatedDate], [UpdatedDate], [ProductId]) values (@Status, GETDATE(), GETDATE(), @ProductId);
END
GO
PRINT N'Creating Procedure [dbo].[spCreateProduct]...';


GO
CREATE PROCEDURE [dbo].[spCreateProduct]
	@Weight int,
	@Height int,
	@Width int,
	@Length int,
	@Name nvarchar(max),
	@Description nvarchar(max)
AS
BEGIN
	insert into [Product] ([Weight], [Height], [Width], [Length], [Name], [Description]) values (@Weight, @Height, @Width, @Length, @Name, @Description);
END
GO
PRINT N'Creating Procedure [dbo].[spGetOrder]...';


GO
CREATE PROCEDURE [dbo].[spGetOrder]
	@OrderId INT
AS
BEGIN
	SELECT * FROM [Order] where [Id] = @OrderId;
END
GO
PRINT N'Creating Procedure [dbo].[spGetOrders]...';


GO
CREATE PROCEDURE [dbo].[spGetOrders]
AS
BEGIN
	SELECT * FROM [Order];
END
GO
PRINT N'Creating Procedure [dbo].[spGetProduct]...';


GO
CREATE PROCEDURE [dbo].[spGetProduct]
	@ProductId INT
AS
BEGIN
	SELECT * FROM [Product] where [Id] = @ProductId;
END
GO
PRINT N'Creating Procedure [dbo].[spGetProducts]...';


GO
CREATE PROCEDURE [dbo].[spGetProducts]
AS
BEGIN
	SELECT * FROM [Product];
END
GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Order] WITH CHECK CHECK CONSTRAINT [FK_Order_ToProduct];


GO
PRINT N'Update complete.';


GO
