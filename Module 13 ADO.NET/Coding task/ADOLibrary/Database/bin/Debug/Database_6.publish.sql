/*
Deployment script for ado-net

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "ado-net"
:setvar DefaultFilePrefix "ado-net"
:setvar DefaultDataPath "C:\Users\Dmitry_Tolkachev\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"
:setvar DefaultLogPath "C:\Users\Dmitry_Tolkachev\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_Order_ToProduct]...';


GO
ALTER TABLE [dbo].[Order] DROP CONSTRAINT [FK_Order_ToProduct];


GO
PRINT N'Starting rebuilding table [dbo].[Order]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Order] (
    [Id]          INT            IDENTITY (1, 1) NOT NULL,
    [Status]      NVARCHAR (250) NOT NULL,
    [CreatedDate] DATETIME       NOT NULL,
    [UpdatedDate] DATETIME       NOT NULL,
    [ProductId]   INT            NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Order])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Order] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Order] ([Id], [Status], [CreatedDate], [UpdatedDate], [ProductId])
        SELECT   [Id],
                 [Status],
                 [CreatedDate],
                 [UpdatedDate],
                 [ProductId]
        FROM     [dbo].[Order]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Order] OFF;
    END

DROP TABLE [dbo].[Order];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Order]', N'Order';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Product]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Product] (
    [Id]          INT            IDENTITY (1, 1) NOT NULL,
    [Name]        NVARCHAR (250) NOT NULL,
    [Description] NVARCHAR (250) NOT NULL,
    [Weight]      INT            NOT NULL,
    [Height]      INT            NOT NULL,
    [Width]       INT            NOT NULL,
    [Length]      INT            NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Product])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Product] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Product] ([Id], [Name], [Description], [Weight], [Height], [Width], [Length])
        SELECT   [Id],
                 [Name],
                 [Description],
                 [Weight],
                 [Height],
                 [Width],
                 [Length]
        FROM     [dbo].[Product]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Product] OFF;
    END

DROP TABLE [dbo].[Product];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Product]', N'Product';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating Foreign Key [dbo].[FK_Order_ToProduct]...';


GO
ALTER TABLE [dbo].[Order] WITH NOCHECK
    ADD CONSTRAINT [FK_Order_ToProduct] FOREIGN KEY ([ProductId]) REFERENCES [dbo].[Product] ([Id]);


GO
PRINT N'Refreshing Procedure [dbo].[spCreateOrder]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[spCreateOrder]';


GO
PRINT N'Refreshing Procedure [dbo].[spGetOrder]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[spGetOrder]';


GO
PRINT N'Refreshing Procedure [dbo].[spGetOrders]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[spGetOrders]';


GO
PRINT N'Refreshing Procedure [dbo].[spCreateProduct]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[spCreateProduct]';


GO
PRINT N'Refreshing Procedure [dbo].[spGetProduct]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[spGetProduct]';


GO
PRINT N'Refreshing Procedure [dbo].[spGetProducts]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[spGetProducts]';


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Order] WITH CHECK CHECK CONSTRAINT [FK_Order_ToProduct];


GO
PRINT N'Update complete.';


GO
